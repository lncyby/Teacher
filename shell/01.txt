linux    来源   发展和应用   特点   

	linux：内核 
        linux操作系统的组成

shell ：shell指令  基础指令，文件操作指令，系统操作指令。。。。。

软件的安装


外存储器 ----- 内存储器（主存储器）---- 缓存 （寄存器）


1T = 1024 G 

1G = 1024 M

1M = 1024 K

1K = 1024 Byte（字节）

1B = 8 bit （位）

> 输出重定向  

eg ：ls > file 

1 创建file文件
2 将ls原本输出的内容放到 file中
3 如果原来存在file文件，那么会先擦除原有内容

>> 输出重定向

eg： cat test >>  file 

1 创建file文件
2 将ls原本输出的内容放到 file中
3 如果原来存在file文件，那么会以追加的方式将新的内容写入文件中

输入重定向
eg： wc <  file 

1 file必须存在
2 将file中的内容作为输入传递给前一个命令


2>  &> 

eg： ls aa > file 

1 file 不存在则创建
2 将原本的错误信息放到file中
3 如果是2>>  &>> 则为追加

echo ： 打印字符串

`` ： 引用命令结果


head tail

diff

file

whereis
which



2  8  10   16 ( 0--9 a b c d e f)

练习1 ：进制转换


ｃｈｍｏｄ　　　ｕ　＋／－　ｒ／ｗ／ｘ　　ｆｉｌｅｎａｍｅ
　　　　　　　　ｇ
		ｏ
		ａ



什么是　ＩＰ　　子网掩码，　网管，广播地址　，ｄｎｓ

＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝

１　ｓｈｅｌｌ脚本的本质　：　ｓｈｅｌｌ命令的有序集合


建立ｓｈｅｌｌ脚本的过程

１　建立文件并编译　　　（文件以　．ｓｈ　为后缀。文件名原则上用字母数字下划线的组合，通常以字母开头有一定意义为好）

２　修改权限　　将编辑的脚本添加可执行权限

３　执行　　如果脚本有可执行权限　可以用　．／ｆｉｌｅｎａｍｅ　　直接执行
　　　　　　如果没有执行权限　可以使用　ｂａｓｈ　ｆｉｌｅｎａｍｅ　声明解释器执行


变量　：　需要是合法的标示符

１．　数字字母下划线组成
２.　不能以数字开头
３.　不能和关键字重名（ｓｈｅｌｌ　命令）
４．　ｓｈｅｌｌ　中是区分大小写的


数字和字符串类型
ｓｈｅｌｌ是弱类型语言


注意点　：　变量赋值时等号两边不要有空格
　　　　　　可以用ｕｎｓｅｔ删除一个变量的赋值
　　　　　　在取变量值的时候用＄


位置变量　：　在执行脚本时，通过命令行进行传入的参数就叫做位置变量

　　＄０　脚本名
　　＄１　－９　表示１－９　９个位置的传入
　　＄｛１０｝
　　
　　传入字符串中间有空格需要用　“”　　
　　＄＃　命令行参数的个数，不包含命令本身
　　＄？　显示前一个命令的推出状态，如果正常为0　否则为非0

export 添加环境变量

HOME PATH

export PATH+=":/home/linux/shell"


read : 从终端获取变量 
 1 一个read对应一个回车


















































  
